variables:
   VERSION: 1.0.${CI_PIPELINE_ID}
   MAVEN_REPO_PATH: ./.m2/repository
   JAVA_OPTS: -XX:MaxRAMPercentage=90
   SAST_EXCLUDED_ANALYZERS: "spotbugs"

include:
  - template: Security/SAST.gitlab-ci.yml

stages:
   - catprop
   - build
   - test
   - release
   - notify
   - deploy

build:
   stage: build
   script:
    - echo "ARTIFACT_JOB_ID=${CI_JOB_ID}" > CI_JOB_ID.txt
    - cd backend
    - mvn package -Dversion.application=${VERSION} -Dmaven.repo.local=${MAVEN_REPO_PATH}
    - cd ..
    - mkdir sausage-store-${VERSION}
    - mv backend/target/sausage-store-${VERSION}.jar sausage-store-${VERSION}/sausage-store-${VERSION}.jar
   artifacts:
    paths:
      - ${CI_PROJECT_DIR}/.m2/
      - sausage-store-${VERSION}/sausage-store-${VERSION}.jar
    reports:
      dotenv: CI_JOB_ID.txt
   rules:
      - changes:
           - backend/*

sonarqube-backend-sast:
   stage: test
   image: maven:3.8-openjdk-16
   variables:
      SONAR_USER_HOME: "${CI_PROJECT_DIR}/.m2/backend"
      GIT_DEPTH: "0"
   script:
    - cd backend
    - >
      mvn verify sonar:sonar
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_BACKEND}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN}
      -Dsonar.projectName=${SONAR_BACKEND}

release:
   stage: release
   script:
      - cd backend
      - mvn deploy -DskipTests -Dversion.application=${VERSION} -Dmaven.repo.local=${MAVEN_REPO_PATH} -s settings.xml
   rules:
      - changes:
           - backend/*

notify-slack: # задача с именем upload-release
   stage: notify
   script:
    - > # сохранение артефакта в package registry
      curl -X POST -H "Content-type: application/json"
      -d "{\"text\": \"Вышла новая версия backend сосисочной — ${VERSION}. Скачать бэкенд можно по ссылке — ${NEXUS_REPO_URL_BACK}/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar\" }" https://hooks.slack.com/services/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
   rules:
      - changes:
           - backend/*

deploy:
  stage: deploy
  before_script:
      #устанавливаем ssh-agent для удобства аутентификации по ssh
      - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
      - eval $(ssh-agent -s)
      #сохраняем сгенеренный ранее приватный ключ для раннера 
      - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
      - mkdir -p ~/.ssh
      - chmod 600 ~/.ssh
      - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
      - chmod 644 ~/.ssh/known_hosts
  script:
    - scp ./backend/sausage-store-backend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-backend.service
    - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL=${NEXUS_REPO_URL_BACK}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash -s " < ./backend/deploy.sh
  environment:
      name: staging
